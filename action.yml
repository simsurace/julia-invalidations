name: Invalidations
description: 'Evaluate number of invalidations'

inputs:
  test_script:
    description: 'Script to test for invalidations. Defaults to `using Package`'
    required: false
    default: ''

outputs:
  total: 
    description: "Total number of invalidations"
    value: ${{ steps.invs.outputs.total }}
  deps: 
    description: "Number of invalidations caused by deps"
    value: ${{ steps.invs.outputs.deps }}

runs:
  using: "composite"
  steps: 
    - name: Get package name
      id: info
      run: |
          REPONAME="${{ github.event.repository.name }}"
          PACKAGENAME=${REPONAME%.jl}
          echo "::set-output name=packagename::$PACKAGENAME"
          if [[ '${{ inputs.test_script }}' == '' ]]; then
            TESTSCRIPT="using ${PACKAGENAME}"
          else
            TESTSCRIPT="${{ inputs.test_script }}"
          fi
          echo "::set-output name=testscript::$TESTSCRIPT"
      shell: bash
      
    - name: Install SnoopCompile tools
      run: julia --project -e 'using Pkg; Pkg.add(["SnoopCompileCore", "SnoopCompile"])'
      shell: bash
    - name: Load package on branch
      id: invs
      run: julia --project -e 'using SnoopCompileCore; invalidations = @snoopr begin ${{ steps.info.outputs.testscript }} end; using SnoopCompile; inv_owned = length(filtermod(${{ steps.info.outputs.packagename }}, invalidation_trees(invalidations))); inv_total = length(uinvalidated(invalidations)); inv_deps = inv_total - inv_owned; @show inv_total, inv_deps; println("::set-output name=total::$(inv_total)");  println("::set-output name=deps::$(inv_deps)")'
      shell: bash    
